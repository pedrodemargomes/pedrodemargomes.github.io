---
---
References
==========

@article{greenwade93,
    author  = "George D. Greenwade",
    title   = "The {C}omprehensive {T}ex {A}rchive {N}etwork ({CTAN})",
    year    = "1993",
    journal = "TUGBoat",
    volume  = "14",
    number  = "3",
    pages   = "342--351"
}

@inproceedings{HawkEye,
    author = {Panwar, Ashish and Bansal, Sorav and Gopinath, K.},
    title = {HawkEye: Efficient Fine-Grained OS Support for Huge Pages},
    year = {2019},
    isbn = {9781450362405},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3297858.3304064},
    doi = {10.1145/3297858.3304064},
    abstract = {Effective huge page management in operating systems is necessary for mitigation of address translation overheads. However, this continues to remain a difficult area in OS design. Recent work on Ingens uncovered some interesting pitfalls in current huge page management strategies. Using both page access patterns discovered by the OS kernel and fine-grained data from hardware performance counters, we expose problematic aspects of current huge page management strategies. In our system, called HawkEye/Linux, we demonstrate alternate ways to address issues related to performance, page fault latency and memory bloat; the primary ideas behind HawkEye management algorithms are async page pre-zeroing, de-duplication of zero-filled pages, fine-grained page access tracking and measurement of address translation overheads through hardware performance counters. Our evaluation shows that HawkEye is more performant, robust and better-suited to handle diverse workloads when compared with current state-of-the-art systems.},
    booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
    pages = {347–360},
    numpages = {14},
    keywords = {hardware counters, virtual memory, huge pages},
    location = {Providence, RI, USA},
    series = {ASPLOS '19}
}

@inproceedings{laux18,
    author = {Lauri P Laux{$\;$}Jr and R A Hexsel},
    title = {Back to the Past: When Segmentation Is More Efficient Than P
aging},
    booktitle = wperformance18,
    month = aug,
    year = 2018,
    pages = {278--289},
}

@inproceedings{laux16,
    author = {Lauri P Laux{$\;$}Jr and R A Hexsel},
    title = {Back to the Past: Segmentation with Infinite and Non-Volatile Memory},
    booktitle = wscad16,
    month = oct,
    year = 2016,
    pages = {278--289},
    doi = {http://dx.doi.org/10.1109/WSCAD-SSC.2012.33}
}

@mastersthesis{laux17d,
    author = {Lauri Paulo Laux{$\;$}Jr},
    title = {De Volta ao Passado: Mem\'oria Virtual com Segmentação para M\'aquinas com Mem\'oria {RAM} `Infinita'},
    school = "Departamento de Inform\'{a}tica, UFPR",
    type = "Disserta\c{c}\~{a}o de Mestrado",
    month = dec,
    year = 2017
}

@misc{hexselcache,
    title = {Projeto de Caches},
    author = {Roberto André Hexsel},
    note  =  {http://www.inf.ufpr.br/roberto/ci212/slides/s07hier-2.pdf},
    note = {Accessed: 26-11-2019},
    year = 2016
}

@inproceedings{softbasico,
    author = {Roberto André Hexsel},
    title = {CI064 – Software Básico},
    month = aug,
    year = 2019,
}

@misc{pagination,
    title = {Paging},
    author = {Michael O’Boyle},
    note  =  {https://www.inf.ed.ac.uk/teaching/courses/os/slides/10-paging16.pdf},
    note = {Accessed: 26-11-2019},
    year = 2019
}

@misc{somaziero,
    title = {Conceitos básicos},
    author = {Carlos A. Maziero},
    note  =  {http://wiki.inf.ufpr.br/maziero/lib/exe/fetch.php?media=socm:socm-texto-14.pdf},
    note = {Accessed: 26-11-2019},
    year = 2019
}

@misc{multics,
  title = {Multics},
  author = {multics website},
  note = {https://multicians.org/},
  note = {Accessed: 2019-11-26},
  year = 2019
}

@misc{segmentation,
  title = {Segmentation in Operating System},
  author = {geeksforgeeks website},
  note = {https://www.geeksforgeeks.org/segmentation-in-operating-system/},
  note = {Accessed: 2019-11-26},
  year = 2019
}

@article{denning,
 author = {Denning, Peter J.},
 title = {Virtual Memory},
 journal = {ACM Comput. Surv.},
 issue_date = {Sept. 1970},
 volume = {2},
 number = {3},
 month = sep,
 year = {1970},
 issn = {0360-0300},
 url = {http://doi.acm.org/10.1145/356571.356573},
 doi = {10.1145/356571.356573},
 acmid = {356573},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{hornyack,
  title={A Study of Virtual Memory Usage and Implications for Large Memory},
  author={Peter Hornyack and Luis Ceze and Steve Gribble and Dan R. K. Ports and Hank Levy},
  year={2015}
}

@inproceedings{ganapathy,
    author = {Ganapathy, Narayanan and Schimmel, Curt},
    title = {General Purpose Operating System Support for Multiple Page Sizes},
    booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
    series = {ATEC '98},
    year = {1998},
    location = {New Orleans, Louisiana},
    pages = {8--8},
    numpages = {1},
    url = {http://dl.acm.org/citation.cfm?id=1268256.1268264},
    acmid = {1268264},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA}
}

@inproceedings{Panwar:2018:MHP:3173162.3173203,
 author = {Panwar, Ashish and Prasad, Aravinda and Gopinath, K.},
 title = {Making Huge Pages Actually Useful},
 booktitle = {Proceedings of the Twenty-Third International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '18},
 year = {2018},
 isbn = {978-1-4503-4911-6},
 location = {Williamsburg, VA, USA},
 pages = {679--692},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/3173162.3173203},
 doi = {10.1145/3173162.3173203},
 acmid = {3173203},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {address translation, huge pages, memory fragmentation},
}

@book{Tanenbaum:2014:MOS:2655363,
 author = {Tanenbaum, Andrew S. and Bos, Herbert},
 title = {Modern Operating Systems},
 year = {2014},
 isbn = {013359162X, 9780133591620},
 edition = {4th},
 publisher = {Prentice Hall Press},
 address = {Upper Saddle River, NJ, USA},
}

@misc{hadoop_performance_guide,
  title = {Hadoop Performance Tuning Guide1 Hadoop Performance Tuning Guide},
  howpublished = {http://amd-dev.wpengine.netdna-cdn.com/wordpress/media/2012/10/Hadoop_Tuning_Guide-Version5.pdf},
  note = {Accessed: 2021-05-04}
}

@misc{mongodb_performance_thp,
  title = {Disable Transparent Huge Pages (THP)},
  howpublished = {https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/},
  note = {Accessed: 2021-11-12}
}

@misc{postgresql_performance_thp,
  title = {Resource Consumption},
  howpublished = {https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-HUGE-PAGES},
  note = {Accessed: 2021-11-12}
}

@misc{huge_pages_rhel6,
  title = {Huge Pages and Transparent Huge Pages},
  howpublished = {https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/performance_tuning_guide/s-memory-transhuge},
  note = {Accessed: 2021-05-04}
}

@inproceedings{new_mech_huge_pages,
    author = {Li, Xinyu and Liu, Lei and Yang, Shengjie and Peng, Lu and Qiu, Jiefan},
    title = {Thinking about A New Mechanism for Huge Page Management},
    year = {2019},
    isbn = {9781450368933},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3343737.3343745},
    doi = {10.1145/3343737.3343745},
    abstract = {The Huge page mechanism is proposed to reduce the TLB misses and benefit the overall system performance. On the system with large memory capacity, using huge pages is an ideal choice to alleviate the virtual-to-physical address translation overheads. However, using huge pages might incur expensive memory compaction operations due to memory fragmentation problem, and lead to memory bloating as many huge pages are often underutilized in practice.In order to address these problems, in this paper, we propose SysMon-H, a sampling module in OS kernel, which is able to obtain the huge page utilization in a low overhead for both cloud and desktop applications. Furthermore, we propose H-Policy, a huge page management policy, which splits the underutilized huge pages to mitigate the memory bloating or promotes the base 4KB pages to huge pages for reducing the TLB misses based on the information provided by SysMon-H. In our prototype, SysMon-H and H-Policy work cooperatively in OS kernel.},
    booktitle = {Proceedings of the 10th ACM SIGOPS Asia-Pacific Workshop on Systems},
    pages = {40–46},
    numpages = {7},
    location = {Hangzhou, China},
    series = {APSys '19}
}

@book{patterson_comp_arch,
    author = {Hennessy, John L. and Patterson, David A.},
    title = {Computer Architecture, Fifth Edition: A Quantitative Approach},
    year = {2011},
    isbn = {012383872X},
    publisher = {Morgan Kaufmann Publishers Inc.},
    address = {San Francisco, CA, USA},
    edition = {5th},
    abstract = {The computing world today is in the middle of a revolution: mobile clients and cloud computing have emerged as the dominant paradigms driving programming and hardware innovation today. The Fifth Edition of Computer Architecture focuses on this dramatic shift, exploring the ways in which software and technology in the "cloud" are accessed by cell phones, tablets, laptops, and other mobile computing devices. Each chapter includes two real-world examples, one mobile and one datacenter, to illustrate this revolutionary change. Updated to cover the mobile computing revolutionEmphasizes the two most important topics in architecture today: memory hierarchy and parallelism in all its forms.Develops common themes throughout each chapter: power, performance, cost, dependability, protection, programming models, and emerging trends ("What's Next")Includes three review appendices in the printed text. Additional reference appendices are available online.Includes updated Case Studies and completely new exercises.}
}

@CONFERENCE{ingens,
    author={Kwon, Y. and Yu, H. and Peter, S. and Rossbach, C.J. and Witchel, E.},
    title={Coordinated and efficient huge page management with ingens},
    journal={Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation, OSDI 2016},
    year={2016},
    pages={705-721},
    note={cited By 91},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060024856&partnerID=40&md5=d784c9502195db308e1c7aaf0421d563},
    document_type={Conference Paper},
    source={Scopus},
}

@ARTICLE{Li20211350,
    author={Li, G. and Chen, W. and Xiang, Y.},
    title={Zweilous: A Decoupled and Flexible Memory Management Framework},
    journal={IEEE Transactions on Computers},
    year={2021},
    volume={70},
    number={9},
    pages={1350-1362},
    doi={10.1109/TC.2020.3009124},
    art_number={9140304},
    note={cited By 0},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112465395&doi=10.1109%2fTC.2020.3009124&partnerID=40&md5=f4d09951bbce099725fcea27ac629e7b},
    document_type={Article},
    source={Scopus},
}

@CONFERENCE{Bender2021105,
    author={Bender, M.A. and Bhattacharjee, A. and Conway, A. and Farach-Colton, M. and Johnson, R. and Kannan, S. and Kuszmaul, W. and Mukherjee, N. and Porter, D. and Tagliavini, G. and Vorobyeva, J. and West, E.},
    title={Paging and the address-translation problem},
    journal={Annual ACM Symposium on Parallelism in Algorithms and Architectures},
    year={2021},
    pages={105-117},
    doi={10.1145/3409964.3461814},
    note={cited By 0},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85109490595&doi=10.1145%2f3409964.3461814&partnerID=40&md5=9d4c589a2c54b47f87d61cfb4629de6f},
    document_type={Conference Paper},
    source={Scopus},
}

@CONFERENCE{Gupta2021512,
    author={Gupta, S. and Bhattacharyya, A. and Oh, Y. and Bhattacharjee, A. and Falsafi, B. and Payer, M.},
    title={Rebooting virtual memory with Midgard},
    journal={Proceedings - International Symposium on Computer Architecture},
    year={2021},
    volume={2021-June},
    pages={512-525},
    doi={10.1109/ISCA52012.2021.00047},
    note={cited By 0},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114674406&doi=10.1109%2fISCA52012.2021.00047&partnerID=40&md5=70703b38bd9972900679098674df2b88},
    document_type={Conference Paper},
    source={Scopus},
}

@CONFERENCE{Ausavarungnirun2017136,
    author={Ausavarungnirun, R. and Landgraf, J. and Miller, V. and Ghose, S. and Gandhi, J. and Rossbach, C.J. and Mutlu, O.},
    title={Mosaic: A GPU memory manager with application-transparent support for multiple page sizes},
    journal={Proceedings of the Annual International Symposium on Microarchitecture, MICRO},
    year={2017},
    volume={Part F131207},
    pages={136-150},
    doi={10.1145/3123939.3123975},
    note={cited By 48},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034081164&doi=10.1145%2f3123939.3123975&partnerID=40&md5=431dfd760baa4ccf4daa34590b7bbbe9},
    document_type={Conference Paper},
    source={Scopus},
}

@CONFERENCE{Ren2019554,
    author={Ren, X. and Rodrigues, K. and Chen, L. and Vega, C. and Stumm, M. and Yuan, D.},
    title={An analysis of performance evolution of Linux’s core operations},
    journal={SOSP 2019 - Proceedings of the 27th ACM Symposium on Operating Systems Principles},
    year={2019},
    pages={554-569},
    doi={10.1145/3341301.3359640},
    note={cited By 10},
    url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076746582&doi=10.1145%2f3341301.3359640&partnerID=40&md5=71ef7c41b6bd4cf68fee8f1fe0c32ad4},
    document_type={Conference Paper},
    source={Scopus},
}

@misc{KselftestsWiki,
  title = {Kselftests wiki},
  howpublished = {https://kselftest.wiki.kernel.org/},
  html = {https://kselftest.wiki.kernel.org/},
  note = {Accessed: 2020-12-8},
}

@misc{KselftestsTree,
  title = {Kselftests tree},
  howpublished = {git.kernel.org/pub/scm/linux/kernel/git/shuah/linux-kselftest.git/tree/tools/testing/selftests},
  note = {Accessed: 2020-12-8},
}

@misc{KsmLwn,
  title = {/dev/ksm: dynamic memory sharing},
  howpublished = {https://lwn.net/Articles/306704/},
  note = {Accessed: 2020-12-8},
}

@misc{anatomyKSM,
  title = {Archived | Anatomy of Linux Kernel Shared Memory},
  howpublished = {https://developer.ibm.com/tutorials/l-kernel-shared-memory/},
  note = {Accessed: 2020-12-8},
}

@misc{pagemap,
  title = {Examining Process Page Tables},
  howpublished = {https://www.kernel.org/doc/html/latest/admin-guide/mm/pagemap.html},
  note = {Accessed: 2020-12-8},
}

@misc{hugepageLwn,
  title = {Reducing page structures for huge pages},
  howpublished = {https://lwn.net/Articles/839737/},
  note = {Accessed: 2020-12-8},
}

@misc{kernelKSM,
  title = {KSM Tests},
  howpublished = {https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/testing/selftests/vm/ksm_tests.c},
  note = {Accessed: 2020-12-8},
}

@misc{LWN,
  title = {LWN},
  howpublished = {https://lwn.net/},
  note = {Accessed: 2020-12-9},
}

@misc{Patch,
  title = {Patch desenvolvido no projeto},
  howpublished = {https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/tools/testing/selftests/vm/ksm_tests.c?id=325254899684adf32b95ae59000dec4a6853e930},
  note = {Accessed: 2020-12-9},
}

